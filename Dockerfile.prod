# ----------------------------------------
# Stage 1: Base setup (shared across stages)
# ----------------------------------------
FROM node:20-bullseye-slim as base

RUN apt-get update && \
    apt-get install -y postgresql-client && \
    npm install -g tsx && \
    rm -rf /var/lib/apt/lists/* && \
    mkdir -p /var/log && \
    touch /var/log/email-worker.log && \
    chmod 644 /var/log/email-worker.log

WORKDIR /remixapp

# ----------------------------------------
# Stage 2: Install ALL dependencies (dev + prod)
# ----------------------------------------
FROM base as deps

COPY package*.json ./
RUN npm ci  # Includes devDependencies

# ----------------------------------------
# Stage 3: Build the app (using devDependencies)
# ----------------------------------------
FROM base as build

COPY --from=deps /remixapp/node_modules /remixapp/node_modules
COPY . .
RUN npm run build  # remix is now available

# ----------------------------------------
# Stage 4: Production image (clean, no devDependencies)
# ----------------------------------------
FROM base as production

ENV NODE_ENV=production

# Install PRODUCTION dependencies only
COPY package*.json ./
RUN npm ci --production  # Excludes devDependencies

# Copy built artifacts from the build stage
COPY --from=build /remixapp/build /remixapp/build
COPY --from=build /remixapp/public /remixapp/public
COPY --from=build /remixapp/server.js /remixapp/server.js
COPY --from=build /remixapp/package.json /remixapp/package.json
COPY start.sh /remixapp/start.sh
RUN chmod +x /remixapp/start.sh

CMD ["/remixapp/start.sh"]